
name: Build extensions

on:
  push:
    branches:
      - main

jobs:

  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      S3_BUCKET: heroku-php-extensions
      BUILDPACK: ./vendor/heroku/heroku-buildpack-php
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    strategy:
      matrix:
        stack:
          - heroku-18
          - heroku-20
          - heroku-22
        series:
          - 20180731 # PHP 7.3
          - 20190902 # PHP 7.4
          - 20200930 # PHP 8.0
          - 20210902 # PHP 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Composer Install
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        run: composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs

      - name: Copy requirements
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        run: cp ${BUILDPACK}/requirements.txt .

      - name: Build Dockerfile
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        run: |
          cat ${BUILDPACK}/support/build/_docker/${{ matrix.stack }}.Dockerfile > docker/build/${{ matrix.stack }}.Dockerfile
          cat docker/${{ matrix.stack }}.Dockerfile >> docker/build/${{ matrix.stack }}.Dockerfile

      - name: Docker build
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        run: docker build --pull --tag ${{ matrix.stack }} --file docker/build/${{ matrix.stack }}.Dockerfile .

      - name: Build liblzf library
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite libraries/liblzf-3.6

      - name: Build lz4 library
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite libraries/lz4-1.9.3

      - name: Build zstd library
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite libraries/zstd-1.4.9

      - name: Build igbinary extension
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/igbinary-3.2.7

      - name: Build msgpack extension
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/msgpack-2.1.2

      - name: Build redis extension
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/redis-5.3.7

      - name: Build relay extension
        if: matrix.series != 20180731 && (matrix.stack != 'heroku-22' || matrix.series >= 20210902)
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/relay-0.4.4

      - name: Build swoole extension for heroku-18, heroku-20, or PHP <= 7.4
        if: matrix.stack != 'heroku-22' || matrix.series < 20200930
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/swoole-4.8.11

      - name: Build swoole extension for heroku-22 and PHP >= 8.0
        if: matrix.stack == 'heroku-22' && matrix.series >= 20200930
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/swoole-5.0.0

      - name: Build openswoole extension
        if: matrix.stack != 'heroku-22' || matrix.series >= 20210902
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --rm -ti \
            --env UPSTREAM_S3_BUCKET=lang-php \
            --env UPSTREAM_S3_PREFIX=dist-${{ matrix.stack }}-stable/ \
            --env-file=${BUILDPACK}/support/build/_docker/env.default \
            ${{ matrix.stack }} deploy.sh --overwrite \
            extensions/no-debug-non-zts-${{ matrix.series }}/openswoole-4.11.1
